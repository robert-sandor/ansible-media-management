- name: Set qbittorrent api URL
  ansible.builtin.set_fact:
    qbt_api_url: "https://{{ qbt_hostname }}.{{ domain }}/api/v2"

- name: Authenticate with qbittorrent using default credentials
  ansible.builtin.uri:
    url: "{{ qbt_api_url }}/auth/login"
    method: POST
    body_format: form-urlencoded
    body:
      username: "{{ qbt_default_username }}"
      password: "{{ qbt_default_password }}"
    headers:
      Referer: "https://{{ qbt_hostname }}.{{ domain }}"
    validate_certs: "{{ validate_certificates }}"
    status_code: [ 200, 401 ]
  register: _response
  retries: 10
  delay: 10
  until: _response.status != -1 

- name: Save qbittorrent cookie
  ansible.builtin.set_fact:
    qbt_cookie: "{{ _response.cookies_string }}"

- name: Authenticate with qbittorrent using changed credentials
  ansible.builtin.uri:
    url: "{{ qbt_api_url }}/auth/login"
    method: POST
    body_format: form-urlencoded
    body:
      username: "{{ qbt_web_ui_username }}"
      password: "{{ qbt_web_ui_password }}"
    headers:
      Referer: "https://{{ qbt_hostname }}.{{ domain }}"
    validate_certs: "{{ validate_certificates }}"
  register: _response
  when: qbt_cookie == ""
  retries: 10
  delay: 10
  until: _response.status != -1 

- name: Save qbittorrent cookie
  ansible.builtin.set_fact:
    qbt_cookie: "{{ _response.cookies_string }}"
  when: qbt_cookie == ""

- name: Create folders for categories
  community.docker.docker_container_exec:
    container: "{{ qbt_name }}"
    command: "mkdir -p {{ item.path }}"
  with_items: "{{ qbt_categories }}"

- name: Attempt to create categories in qbittorrent
  ansible.builtin.uri:
    url: "{{ qbt_api_url }}/torrents/createCategory"
    method: POST
    body_format: form-urlencoded
    body:
      category: "{{ item.name }}"
      savePath: "{{ item.path }}"
    headers:
      Cookie: "{{ qbt_cookie }}"
    status_code: 200, 409
    validate_certs: "{{ validate_certificates }}"
  with_items: "{{ qbt_categories }}"
  register: _response
  retries: 10
  delay: 10
  until: _response.status != -1 

- name: Get alternaltive web UI for qbittorrent
  ansible.builtin.import_tasks: ../tasks/qbittorrent/get-vuetorrent.yml
  when: qbt_alternative_webui_enabled

- name: Create qbt preferences request body
  ansible.builtin.set_fact:
    qbt_pref:
      save_path: "{{ qbt_save_path }}"
      auto_tmm_enabled: "{{ qbt_auto_tmm_enabled }}"
      max_active_downloads: "{{ qbt_max_active_downloads }}"
      max_active_torrents: "{{ qbt_max_active_torrents }}"
      max_active_uploads: "{{ qbt_max_active_uploads }}"
      alt_dl_limit: "{{ qbt_alt_dl_limit }}"
      alt_up_limit: "{{ qbt_alt_up_limit }}"
      web_ui_username: "{{ qbt_web_ui_username }}"
      web_ui_password: "{{ qbt_web_ui_password }}"
      bypass_auth_subnet_whitelist_enabled: "{{ qbt_bypass_auth_subnet_whitelist_enabled }}"
      bypass_auth_subnet_whitelist: "{{ qbt_bypass_auth_subnet_whitelist }}"
      alternative_webui_enabled: "{{ qbt_alternative_webui_enabled }}"
      alternative_webui_path: "{{ qbt_alternative_webui_path }}"

- name: Set preferences in qbittorrent
  ansible.builtin.uri:
    url: "{{ qbt_api_url }}/app/setPreferences"
    method: POST
    body_format: form-urlencoded
    body:
      json: "{{ qbt_pref | to_json }}"
    headers:
      Cookie: "{{ qbt_cookie }}"
    status_code: 200
    validate_certs: "{{ validate_certificates }}"
  register: _response
  retries: 10
  delay: 10
  until: _response.status != -1 
