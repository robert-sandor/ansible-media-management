- name: Set overseerr_api variable
  ansible.builtin.set_fact:
    overseerr_api: "https://{{ overseerr_hostname }}.{{ domain }}/api/v1"

- name: Sign in to Overseerr using Plex Auth token
  ansible.builtin.uri:
    url: "{{ overseerr_api }}/auth/plex"
    method: POST
    body_format: json
    body:
      authToken: "{{ overseerr_plex_auth_token }}"
    validate_certs: "{{ validate_certificates }}"
  register: _response
  retries: 10
  delay: 10
  until: _response.status != -1

- name: Save Overserr cookie
  ansible.builtin.set_fact:
    overseerr_cookie: "{{ _response.cookies['connect.sid'] }}"

- name: Set Plex server configuration
  ansible.builtin.uri:
    url: "{{ overseerr_api }}/settings/plex"
    method: POST
    body_format: json
    headers:
      Cookie: "connect.sid={{ overseerr_cookie }}"
    body: |
      {
        "ip": "{{ overseerr_plex_ip }}", 
        "port": {{ overseerr_plex_port }}, 
        "webAppUrl": "https://app.plex.tv/desktop"
      }
    validate_certs: "{{ validate_certificates }}"
  register: _response
  retries: 10
  delay: 10
  until: _response.status != -1

- name: Create Sonarr
  ansible.builtin.import_tasks: ../tasks/overseerr/create_sonarr.yml
  when: sonarr_enable

- name: Create Radarr
  ansible.builtin.import_tasks: ../tasks/overseerr/create_radarr.yml
  when: radarr_enable

- name: Get Overseerr apiKey
  ansible.builtin.uri:
    url: "{{ overseerr_api }}/settings/main"
    method: GET
    headers:
      Cookie: "connect.sid={{ overseerr_cookie }}"
    validate_certs: "{{ validate_certificates }}"
  register: _response
  retries: 10
  delay: 10
  until: _response.status != -1

- name: Save Overserr apiKey
  ansible.builtin.set_fact:
    overseerr_api_key: "{{ _response.json['apiKey'] }}"
